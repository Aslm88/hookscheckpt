{"version":3,"sources":["components/MovieCard.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","fetch","then","res","json","data","console","log","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAyBeA,EAtBD,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,YAAYC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,aACxC,OACA,sBAAKC,UAAU,QAAf,UAEI,qBAAKC,IALE,mCAKYJ,EAAaK,IAAKN,IACrC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,+BAAOG,OAGX,sBAAKC,UAAU,cAAf,UACI,0CACA,4BAAIF,WC8CDK,MApDf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAU,IAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KAyBA,OAvBAC,qBAAW,WACXC,MATkB,uHAUZC,MAAM,SAACC,GAAD,OAASA,EAAIC,UACnBF,MAAM,SAACG,GACNC,QAAQC,IAAIF,GACVR,EAAWQ,EAAKG,cAElB,IAiBL,qCACG,iCACE,sBAAMC,SAhBc,SAACC,GACtBA,EAAEC,iBAEFV,MAnBU,6FAmBUH,GACpBI,MAAM,SAACC,GAAD,OAASA,EAAIC,UACnBF,MAAM,SAACG,GACNC,QAAQC,IAAIF,GACVR,EAAWQ,EAAKG,aASlB,SACE,uBAAOjB,UAAU,SACVqB,KAAK,SACLC,YAAY,YACZC,MAAOhB,EACPiB,SAXW,SAACL,GACtBX,EAAeW,EAAEM,OAAOF,cAezB,qBAAKvB,UAAU,kBAAf,SAGDK,EAAOqB,OAAS,GAAKrB,EAAOsB,KAAK,SAACC,GAAD,OAElC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aC1CRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eceba5a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API =\"https://image.tmdb.org/t/p/w1280\";\r\nconst Movie = ({title, poster_path,overview,vote_average}) => {\r\n    return (\r\n    <div className=\"movie\">\r\n\r\n        <img src={IMG_API+ poster_path} alt={title}/>\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span>{vote_average}</span>\r\n        </div>\r\n\r\n        <div className=\"description\">\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n    \r\n};\r\n\r\n\r\n\r\nexport default Movie ;","import React, {useEffect,useState} from 'react';\nimport Movie from \"./components/MovieCard.js\";\n\n\n\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n\nconst SEARCH_API =\"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nfunction App() {\n  const [movies, setMovies]= useState([]);\n  const [searchTerm,setSearchTerm]= useState (\"\");\n\n  useEffect (() => {\n  fetch (FEATURED_API)\n       .then ((res) => res.json())\n       .then ((data) => {\n         console.log(data);\n           setMovies (data.results);\n       });\n      }, []);\n\n\n      const handleOnSubmit = (e) => {\n        e.preventDefault() ;\n\n        fetch (SEARCH_API + searchTerm)\n       .then ((res) => res.json())\n       .then ((data) => {\n         console.log(data);\n           setMovies (data.results);\n       });\n      }\n      const handleOnChange = (e) => {\n        setSearchTerm (e.target.value) ;\n      }\n  return (\n    <>\n       <header>\n         <form onSubmit={handleOnSubmit}>\n           <input className=\"search\"\n                  type=\"search\"\n                  placeholder=\"Search...\"\n                  value={searchTerm}\n                  onChange={handleOnChange}\n            />\n          </form>        \n       </header>\n\n       <div className=\"movie-container\">\n         \n    \n     {movies.length > 0 && movies.map ((movie)=>\n   \n     <Movie key={movie.id} {...movie}/>)}\n       </div>\n       </>\n  )\n    \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}